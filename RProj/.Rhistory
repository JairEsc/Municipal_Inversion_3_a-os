geometrias_matcheadas_por_no_mun=geometrias_matcheadas |>
dplyr::group_by(ID_OBRA) |> dplyr::summarise(geometry=st_combine(geometry))
geometrias_matcheadas_por_no_mun=merge(geometrias_matcheadas_por_no_mun,
geometrias_matcheadas |> st_drop_geometry() |>
dplyr::group_by(ID_OBRA) |>
dplyr::slice_head(n=1),
by='ID_OBRA',all.x=T)
View(geometrias_matcheadas_por_no_mun)
View(simulacro_union)
##Leemos el docs con el municipio encontrado
docs_sheets=readxl::read_excel("../Ocultos/Georeferenciacion_SIPDUS.xlsx")
puntos_alfred=docs_sheets |>
dplyr::filter(RESPONSABLE=='Alfred'&!is.na(X))
kml_alfred=puntos_alfred |>
dplyr::mutate(X=as.numeric(gsub("\\,","",X)))|>
dplyr::mutate(Y=as.numeric(gsub("\\,","",Y)))|>
st_as_sf(coords = c("X","Y")) |> st_set_crs(st_crs("EPSG:4326")) #EPSG:32614
##Y Emma
puntos_emma=docs_sheets |>
dplyr::filter(RESPONSABLE=='Emma'&!is.na(X))
kml_emma=puntos_emma |>
dplyr::mutate(X=as.numeric(gsub("\\,","",X)))|>
dplyr::mutate(Y=as.numeric(gsub("\\,","",Y)))|>
st_as_sf(coords = c("X","Y")) |> st_set_crs(st_crs("EPSG:4326"))
##Y Eve
puntos_eve=docs_sheets |>
dplyr::filter(RESPONSABLE=='evelin'&!is.na(X))
kml_eve=puntos_eve |>
dplyr::mutate(X=as.numeric(gsub("\\,","",X)))|>
dplyr::mutate(Y=as.numeric(gsub("\\,","",Y)))|>
st_as_sf(coords = c("X","Y")) |> st_set_crs(st_crs("EPSG:4326"))
#  st_transform(st_crs("EPSG:4326"))
puntos_kenn=docs_sheets |>
dplyr::filter(RESPONSABLE=='Kenneth'&!is.na(X))
kml_keneth=puntos_kenn |>
dplyr::mutate(X=as.numeric(gsub("\\,","",X)))|>
dplyr::mutate(Y=as.numeric(gsub("\\,","",Y)))|>
st_as_sf(coords = c("X","Y")) |> st_set_crs(st_crs("EPSG:4326"))
#unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Obras_Jair.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Nueva carpeta/Jair.kml")
#unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Sipdus_Kenneth.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Nueva carpeta/Keneth.kml")
#"../Ocultos/Georeferenciados_a_mano/Nueva carpeta/Keneth.kml/doc.kml" |> st_read() |> nrow()
kmls=list.files(path = "../Ocultos/Georeferenciados_a_mano/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
kmls=do.call(plyr::rbind.fill,kmls)
kmls=kmls |>
dplyr::select(-Description)
kmls=merge(kmls,docs_sheets,by.x ='Name',by.y='ID_OBRA',all.x=T) ##En este merge se pueden duplicar por los que agregarmos en
#localidad_encontrada (un mismo renglón se divide en varios porque la obra tenía más información)
##Como preliminar, dejamos los duplicados y luego tomamos la primera con el mismo ID
##Para el mapa web sirve. Para la base de obras no tanto. Pero eso está pendiente.
kmls=kmls |>
dplyr::group_by(Name,geometry) |>
dplyr::slice_head(n=1) |>
st_as_sf() |>
st_zm() |>
dplyr::filter(Name!='River of the birdnidas')
###
kmls=plyr::rbind.fill(kmls,kml_alfred,kml_emma,kml_eve,kml_keneth)
library(leaflet)
kmls_faltantes=kmls[grepl("\\,",kmls$municipios_original) & kmls$`municio encontrado` |> is.na(),] |> st_as_sf()|> st_zm()
#kmls$`municio encontrado`[grepl("\\,",kmls$municipios_original)& kmls$`municio encontrado` |> is.na()]=c("Pachuca de Soto","Ixmiquilpan","Chilcuautla")
kmls_faltantes=st_join(x = kmls_faltantes,y=municipios |> st_transform(st_crs("EPSG:4326")),join = st_within)
kmls_faltantes=kmls_faltantes |>
dplyr::mutate(`municio encontrado`=NOM_MUN)
###Si logro unirlas a fuente_3 ya quedaría, porque fuente_3 al reducirse por no_mun ya queda útil
kmls_full=rbind(kmls |> dplyr::filter(!(is.na(`municio encontrado`) & grepl("\\,",x = municipios_original))),
kmls_faltantes |> dplyr::select(Name:ID_OBRA)
)
kmls_full=kmls_full |> dplyr::mutate(Name=ifelse(Name |> is.na(),ID_OBRA,Name))
kmls_full=kmls_full |> dplyr::mutate(`municio encontrado`=ifelse(`municio encontrado` |> is.na(),municipios_original,`municio encontrado`))
all(!(kmls_full$Name |> is.na()))
kmls_para_merge=kmls_full |> st_as_sf()|>  st_zm() |> dplyr::select(Name,`municio encontrado`,`Localidad encontrada`,municipios_original) |>
dplyr::rowwise() |> dplyr::mutate(
Name = sapply(Name, function(x) {
parts <- unlist(strsplit(x, split = "_"))
parts[1]
})
) |>
dplyr::mutate(`municio encontrado`=ifelse(!is.na(`municio encontrado`),`municio encontrado`,municipios_original)) |>
dplyr::mutate(Name=paste0(Name,"_",`municio encontrado`)) |>
dplyr::ungroup() |>
dplyr::group_by(Name) |>
dplyr::summarise(geometry=st_combine(geometry))
excel_separados_por_mun_para_merge=excel_separados_por_mun |>
dplyr::mutate(ID=paste0(No.,"_",Municipio))
###Primero identificamos los que no se pudieron unir.
#Al menos habrá dos donde eran de cobertura estatal y se encontró el municipio
kmls_para_merge$Name[which(kmls_para_merge$Name |> lapply(\(x){!x%in%excel_separados_por_mun_para_merge$ID}) |> unlist())]
simulacro_union=merge(kmls_para_merge,
excel_separados_por_mun_para_merge,
by.x='Name',by.y='ID')
leaflet() |> addTiles() |> addCircleMarkers(data=kmls_full |> st_as_sf(), label = paste(kmls_full$RESPONSABLE,kmls_full$Name))
View(geometrias_matcheadas_por_no_mun)
##Por otro lado, tenemos el simulacro de unión.
geometrias_matcheadas_por_no_mun |> colnames()
simulacro_union |> colnames()
rbind(geometrias_matcheadas_por_no_mun|> dplyr::select(ID_OBRA,NOM_MUN,Obra,Rubro),
simulacro_union |> dplyr::select(name,Municipio,Obra,Rubro) |>
dplyr::rename(ID_OBRA=name,
NOM_MUN=Municipio))
zzz=rbind(geometrias_matcheadas_por_no_mun|> dplyr::select(ID_OBRA,NOM_MUN,Obra,Rubro),
simulacro_union |> dplyr::select(name,Municipio,Obra,Rubro) |>
dplyr::rename(ID_OBRA=name,
NOM_MUN=Municipio))
zzz |> st_write("../Ocultos/prototipo_geojson_para_resumen_NO_MUNICIPIO.geojson",driver = "GeoJSON")
View(zzz)
View(geometrias_matcheadas_por_no_mun)
View(simulacro_union)
View(geometrias_matcheadas_por_no_mun)
View(simulacro_union)
zzz=rbind(geometrias_matcheadas_por_no_mun|> dplyr::select(ID_OBRA,NOM_MUN,Obra,Rubro),
simulacro_union |> dplyr::select(Name,Municipio,Obra,Rubro) |>
dplyr::rename(ID_OBRA=Name,
NOM_MUN=Municipio))
View(zzz)
zzz |> st_write("../Ocultos/prototipo_geojson_para_resumen_NO_MUNICIPIO.geojson",driver = "GeoJSON")
View(zzz)
zzz$ID_OBRA |> unique() |> length()
zzz |> dplyr::group_by(ID_OBRA) |>
dplyr::summarise(geometry=st_combine(geometry)) |> st_write("../Ocultos/prototipo_geojson_para_resumen_NO_MUNICIPIO.geojson",driver = "GeoJSON")
geometrias_encontradas_unica_vez=read_sf("../Ocultos/Georeferenciadas por joins/Localidades_Obras_Repetidas_una_Vez.shp")
###Algunas de estas geometrías aparecen una única vez (hay más de 5000 localidades en el estado)
###Se considera la geometría encontrada si aparece una única vez
library(sf)
geometrias_encontradas_unica_vez=read_sf("../Ocultos/Georeferenciadas por joins/Localidades_Obras_Repetidas_una_Vez.shp")
View(geometrias_encontradas_unica_vez_c_ID)
kmls_para_merge$Name |> unique() |> length()
geometrias_encontradas_unica_vez_c_ID$Name |> unique() |> length()
geometrias_encontradas_unica_vez_c_ID$ID_OBRA |> unique() |> length()
View(fuente_3)
View(fuente_0_sipdus_2306)
View(fuente_2)
paste0(fuente_2$No.,fuente_2$Municipio) |> unique() |> length()
###Primero identificamos los que no se pudieron unir.
#Al menos habrá dos donde eran de cobertura estatal y se encontró el municipio
kmls_para_merge$Name[which(kmls_para_merge$Name |> lapply(\(x){!x%in%excel_separados_por_mun_para_merge$ID}) |> unlist())]
geometrias_encontradas_unica_vez_c_ID= geometrias_encontradas_unica_vez_c_ID|>
dplyr::group_by(ID_OBRA) |>
dplyr::summarise(geometry=st_combine(geometry))
View(geometrias_encontradas_unica_vez_c_ID)
geometrias_encontradas_unica_vez_c_ID |> nrow()
kmls_para_merge |> nrow()
kmls_para_merge$Name |> unique() |> length()
View(kmls_para_merge)
obras_ya_encontradas=rbind(geometrias_encontradas_unica_vez_c_ID,kmls_para_merge)
View(geometrias_encontradas_unica_vez_c_ID)
View(kmls_para_merge)
obras_ya_encontradas=rbind(geometrias_encontradas_unica_vez_c_ID,kmls_para_merge |>
dplyr::rename(ID_OBRA=Name))
View(obras_ya_encontradas)
###De las 1481 obras originales, vamos a tratar de excluir las que ya están hechas.
por_obra_y_loc=fuente_2
por_obra_y_loc=por_obra_y_loc |>
dplyr::mutate(ID_OBRA=paste0(No.,"_",Municipio))
por_obra_y_loc$ID_OBRA |> unique() |> length()
obras_ya_encontradas$ID_OBRA |> unique()
View(obras_ya_encontradas)
obras_ya_encontradas=obras_ya_encontradas |>
dplyr::group_by(ID_OBRA) |>
dplyr::summarise(geometry=st_combine(geometry))
obras_ya_encontradas$ID_OBRA |> unique()
obras_ya_encontradas |> nrow()
por_obra_y_loc=merge(por_obra_y_loc,obras_ya_encontradas,by='ID_OBRA',all.x=T)
###
por_obra_y_loc_s_g=por_obra_y_loc |>
dplyr::filter(st_is_empty(geometry))
View(por_obra_y_loc_s_g)
###
por_obra_y_loc_s_g_3_muns=por_obra_y_loc |>
dplyr::filter(st_is_empty(geometry)) |>
dplyr::filter(Municipio%in%c("Pachuca de Soto","Mineral de la Reforma","Tizayuca"))
View(por_obra_y_loc_s_g_3_muns)
por_obra_y_loc_s_g_3_muns |> openxlsx::write.xlsx("../Ocultos/Georeferenciacion_SIPDUS_pachuca_mineral_tiza.xlsx")
View(por_obra_y_loc_s_g_3_muns)
View(por_obra_y_loc_s_g_3_muns)
por_obra_y_loc_s_g_3_muns |>st_drop_geometry()  |> openxlsx::write.xlsx("../Ocultos/Georeferenciacion_SIPDUS_pachuca_mineral_tiza.xlsx")
por_obra_y_loc_s_g_3_muns |>st_drop_geometry() |> as.data.frame()  |> openxlsx::write.xlsx("../Ocultos/Georeferenciacion_SIPDUS_pachuca_mineral_tiza.xlsx")
por_obra_y_loc_s_g_3_muns |>st_drop_geometry() |> as.data.frame()
por_obra_y_loc_s_g_3_muns |>st_drop_geometry() |> dplyr::select(-geometry) |> as.data.frame()  |> openxlsx::write.xlsx("../Ocultos/Georeferenciacion_SIPDUS_pachuca_mineral_tiza.xlsx")
View(geometrias_encontradas_unica_vez_c_ID)
View(kmls_para_merge)
View(fuente_2)
View(por_obra_y_loc)
View(por_obra_y_loc_s_g_3_muns)
View(fuente_0_sipdus_2306)
View(obras_ya_encontradas)
por_obra_y_loc_s_g_3_muns$ID_OBRA |> sapply(function(x) {
parts <- unlist(strsplit(x, split = "_"))
parts[1]
}) |> unlist() |> unique()
por_obra_y_loc_s_g_3_muns$ID_OBRA |> sapply(function(x) {
parts <- unlist(strsplit(x, split = "_"))
parts[1]
}) |> unlist() |> unique() |> length()
View(por_obra_y_loc)
##
por_obra_y_loc_c_g=por_obra_y_loc |>
dplyr::filter(!st_is_empty(geometry))
View(por_obra_y_loc_c_g)
por_obra_y_loc_c_g=por_obra_y_loc_c_g |> dplyr::group_by(ID_OBRA) |>
dplyr::summarise(geometry=st_combine(geometry))
View(por_obra_y_loc_c_g)
obras_ya_util_tiene_geo=merge(obras_ya_util |>
dplyr::mutate(ID_OBRA=paste0(ID,"_",NOM_MUN)),
por_obra_y_loc_c_g,by="ID_OBRA",all.x=T)
View(obras_ya_util_tiene_geo)
obras_ya_util_tiene_geo=obras_ya_util_tiene_geo |>
dplyr::mutate(tiene_geo=!st_is_empty(geometry))
View(obras_ya_util_tiene_geo)
View(obras_ya_util_tiene_geo)
obras_ya_util_tiene_geo=obras_ya_util_tiene_geo |>
dplyr::mutate(tiene_geo=!st_is_empty(geometry)) |>
st_drop_geometry()
View(obras_ya_util_tiene_geo)
obras_ya_util_tiene_geo=obras_ya_util_tiene_geo |>
dplyr::mutate(tiene_geo=!st_is_empty(geometry)) |>
st_drop_geometry() |>
dplyr::select(-geometry)
View(obras_ya_util_tiene_geo)
obras_ya_util_tiene_geo$tiene_geo |> sum()
obras_ya_util_tiene_geo |> write.table("../Datos/SIPDUS_2022-2025_tiene_geo (2).tsv",row.names = F,sep = "\t")
View(por_obra_y_loc_c_g)
obras_ya_util_tiene_geo_p_geojson=merge(obras_ya_util |>
dplyr::mutate(ID_OBRA=paste0(ID,"_",NOM_MUN)),
por_obra_y_loc_c_g,by="ID_OBRA",all.x=T)
View(obras_ya_util_tiene_geo_p_geojson)
obras_ya_util_tiene_geo_p_geojson |> dplyr::filter(!st_is_empty(geometry))
obras_ya_util_tiene_geo_p_geojson |> dplyr::filter(!st_is_empty(geometry)) |>
st_write("../Datos/spidus_obras_c_geometrias_bien.geojson")
View(obras_ya_util_tiene_geo_p_geojson)
source("~/.active-rstudio-document", echo=TRUE)
obras_ya_util_tiene_geo_p_geojson |> dplyr::filter(!st_is_empty(geometry)) |>
dplyr::mutate(tiene_geo=!st_is_empty(geometry)) |>
st_write("../Datos/spidus_obras_c_geometrias_bien.geojson")
View(por_obra_y_loc_c_g)
por_obra_y_loc=por_obra_y_loc |>
dplyr::mutate(ID_OBRA=paste0(No.,"_",Municipio))
###De las 1481 obras originales, vamos a tratar de excluir las que ya están hechas.
por_obra_y_loc=fuente_2
por_obra_y_loc=por_obra_y_loc |>
dplyr::mutate(ID_OBRA=paste0(No.,"_",Municipio))
por_obra_y_loc=merge(por_obra_y_loc,obras_ya_encontradas,by='ID_OBRA',all.x=T)
View(por_obra_y_loc)
View(geometrias_encontradas_unica_vez_c_ID)
View(kmls_para_merge)
#y
geometrias_encontradas_unica_vez_c_ID |> dplyr::filter(ID_OBRA%in%kmls_para_merge$Name)
obras_ya_encontradas=rbind(geometrias_encontradas_unica_vez_c_ID,kmls_para_merge |>
dplyr::rename(ID_OBRA=Name))
View(obras_ya_encontradas)
obras_ya_encontradas=rbind(geometrias_encontradas_unica_vez_c_ID |>
dplyr::mutate(fuente='Lalo'),kmls_para_merge |>
dplyr::rename(ID_OBRA=Name)|>
dplyr::mutate(fuente='mano'))
View(obras_ya_encontradas)
sort("lalo","mano")
sort(c("lalo","mano"),decreasing = T)
obras_ya_encontradas_slice= obras_ya_encontradas |>
dplyr::group_by(ID_OBRA) |>
dplyr::arrange(dplyr::desc(fuente)) |>
dplyr::slice_head(n=1)
View(obras_ya_encontradas_slice)
obras_ya_encontradas_slice$ID_OBRA |> unique() |> length()
geometrias_encontradas_unica_vez_c_ID$ID_OBRA |> unique() |> length()
geometrias_encontradas_unica_vez_c_ID$ID_OBRA |> length()
kmls_para_merge$Name |> unique() |> length()
kmls_para_merge$Name |> length()
obras_ya_encontradas=obras_ya_encontradas_slice
###De las 1481 obras originales, vamos a tratar de excluir las que ya están hechas.
por_obra_y_loc=fuente_2
por_obra_y_loc=por_obra_y_loc |>
dplyr::mutate(ID_OBRA=paste0(No.,"_",Municipio))
View(obras_ya_encontradas)
###De las 1481 obras originales, vamos a tratar de excluir las que ya están hechas.
por_obra_y_loc=fuente_2
por_obra_y_loc=por_obra_y_loc |>
dplyr::mutate(ID_OBRA=paste0(No.,"_",Municipio))
por_obra_y_loc=merge(por_obra_y_loc,obras_ya_encontradas,by='ID_OBRA',all.x=T)
##
por_obra_y_loc_c_g=por_obra_y_loc |>
dplyr::filter(!st_is_empty(geometry))
View(por_obra_y_loc_c_g)
##
por_obra_y_loc_c_g=por_obra_y_loc |>
dplyr::filter(!st_is_empty(geometry)) |>
dplyr::group_by(ID_OBRA) |>
dplyr::slice_head(n=1)
por_obra_y_loc_c_g$ID_OBRA |> unique()
View(por_obra_y_loc_c_g)
##
por_obra_y_loc_c_g=por_obra_y_loc |>
dplyr::filter(!st_is_empty(geometry)) |>
dplyr::group_by(ID_OBRA) |>
dplyr::slice_head(n=1) |>
#por_obra_y_loc_c_g=por_obra_y_loc_c_g |> dplyr::group_by(ID_OBRA) |>
#  dplyr::summarise(geometry=st_combine(geometry))
# obras_ya_util_tiene_geo=merge(obras_ya_util |>
#                                 dplyr::mutate(ID_OBRA=paste0(ID,"_",NOM_MUN)),
#                               por_obra_y_loc_c_g,by="ID_OBRA",all.x=T)
obras_ya_util_tiene_geo=por_obra_y_loc_c_g
View(municipios)
View(obras_ya_util_tiene_geo)
##
por_obra_y_loc_c_g=por_obra_y_loc |>
dplyr::filter(!st_is_empty(geometry)) |>
dplyr::group_by(ID_OBRA) |>
dplyr::slice_head(n=1) |>
#por_obra_y_loc_c_g=por_obra_y_loc_c_g |> dplyr::group_by(ID_OBRA) |>
#  dplyr::summarise(geometry=st_combine(geometry))
# obras_ya_util_tiene_geo=merge(obras_ya_util |>
#                                 dplyr::mutate(ID_OBRA=paste0(ID,"_",NOM_MUN)),
#                               por_obra_y_loc_c_g,by="ID_OBRA",all.x=T)
obras_ya_util_tiene_geo=por_obra_y_loc_c_g
# obras_ya_util_tiene_geo=merge(obras_ya_util |>
#                                 dplyr::mutate(ID_OBRA=paste0(ID,"_",NOM_MUN)),
#                               por_obra_y_loc_c_g,by="ID_OBRA",all.x=T)
obras_ya_util_tiene_geo=por_obra_y_loc_c_g
View(obras_ya_util_tiene_geo)
obras_ya_util_tiene_geo |> dplyr::filter(!st_is_empty(geometry)) |>
dplyr::mutate(tiene_geo=!st_is_empty(geometry)) |>
st_write("../Datos/spidus_obras_c_geometrias_bien.geojson")
View(kmls_para_merge)
View(obras_ya_util_tiene_geo)
obras_ya_util_tiene_geo$geometry[420]=st_cast(obras_ya_util_tiene_geo$geometry[420],"LineString")
obras_ya_util_tiene_geo$geometry[420]=st_cast(obras_ya_util_tiene_geo$geometry[420],"Line")
obras_ya_util_tiene_geo$geometry[420]=st_cast(obras_ya_util_tiene_geo$geometry[420],"LINESTRING")
obras_ya_util_tiene_geo |> dplyr::filter(!st_is_empty(geometry)) |>
dplyr::mutate(tiene_geo=!st_is_empty(geometry)) |>
st_write("../Datos/spidus_obras_c_geometrias_bien.geojson")
# obras_ya_util_tiene_geo=merge(obras_ya_util |>
#                                 dplyr::mutate(ID_OBRA=paste0(ID,"_",NOM_MUN)),
#                               por_obra_y_loc_c_g,by="ID_OBRA",all.x=T)
obras_ya_util_tiene_geo=por_obra_y_loc_c_g
View(fuente_0_sipdus_2306)
#kmls
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Itzel_OBRAS.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/")
kmls_sv=list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
View(kmls_sv)
kmls_sv[[1]]
kmls_itz=kmls_sv[[1]]
View(kmls_itz)
View(por_obra_y_loc)
por_obra_y_loc_s_g_tula_zempoala_zapotlan=por_obra_y_loc |>
dplyr::filter(st_is_empty(geometry)) |>
dplyr::filter(Municipio%in%c("Tula de Allende","Zempoala","Zapotlán de Juárez"))
View(por_obra_y_loc_s_g_tula_zempoala_zapotlan)
View(por_obra_y_loc_s_g_tula_zempoala_zapotlan)
View(por_obra_y_loc_s_g_tula_zempoala_zapotlan)
por_obra_y_loc_s_g_tula_zempoala_zapotlan |> dplyr::select(-geometry,-fuente) |>
openxlsx::write.xlsx("../Ocultos/Georeferenciacion_SIPDUS_tula_zemp_zapotl.xlsx")
View(kmls_itz)
View(fuente_0_sipdus_2306)
"
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/LINEAS_OBRAS VIALES.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/")
#kmls
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Itzel_OBRAS.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/a.kml")
"../../../Reutilizables/Cartografia/LIM_MUNICIPALES.shp" |> st_read() |> dplyr::select(geometry) |> plot()
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Itzel_OBRAS.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/itz.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/LINEAS_OBRAS VIALES.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/eve_linea.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/OBRAS SIPDUS ZONA METRO(Emma).kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/emma.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Obras Spidus jair1525.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/kml_jair.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/PUNTOS_OBRAS.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/eve_punto.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Obras_SIPDUS_Metro_Kenneth.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/kenet.kml")
#
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Obras_Enrique_2.kml" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/quique.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Obras_Lalo2.kml" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/lalo.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/PUNTOS_OBRAS 2.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/alfred2.kml")
#
#unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Obras_Enrique_2.kml" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/quique.kml")
#unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/Obras_Lalo2.kml" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/lalo.kml")
unzip(zipfile ="../Ocultos/Georeferenciados_a_mano/Segunda vuelta/PUNTOS_OBRAS 2.kmz" ,exdir = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/para_kmls/alfred2.kml")
kmls_sv=list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
kmls_sv=do.call(plyr::rbind.fill,kmls_sv)
kmls_sv=list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
View(kmls_sv)
list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T)
kmls_sv=list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
kmls_sv=do.call(plyr::rbind.fill,kmls_sv)
View(kml_emma)
list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T)
kmls_sv=list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
View(kmls_sv)
kmls_sv[[4]]
###Primero identificamos los que no se pudieron unir.
#Al menos habrá dos donde eran de cobertura estatal y se encontró el municipio
kmls_para_merge$Name[which(kmls_para_merge$Name |> lapply(\(x){!x%in%excel_separados_por_mun_para_merge$ID}) |> unlist())]
View(fuente_0_sipdus_2306)
View(kmls_full)
##Leemos el drive y kmls:
docs_sheets_sv=readxl::read_excel("../Ocultos/Georeferenciados_a_mano/Segunda vuelta/OBRAS SIPDUS ZONA METRO.xlsx")
kmls_sv=list.files(path = "../Ocultos/Georeferenciados_a_mano/Segunda vuelta/",pattern = ".kml$",full.names = T,recursive = T) |>
lapply(st_read)
kmls_sv=do.call(plyr::rbind.fill,kmls_sv)
View(kmls_sv)
kmls_sv=kmls_sv |>
dplyr::select(-Description) |>
dplyr::filter(Name!='Alfred')
View(kmls_sv)
View(kmls_sv)
kmls_sv=merge(kmls_sv,docs_sheets_sv,by.x ='Name',by.y='ID_OBRA',all.x=T) ##En este merge se pueden duplicar por los que agregarmos en
View(kmls_sv)
kmls_sv$Name |> unique() |> length()
View(kmls_sv)
kmls_sv$geometry[10] |> plot()
kmls_sv$geometry[10] |> st_cast("LINESTRING") |> plot()
kmls_sv$geometry[10] |> st_cast("LINESTRING")
#localidad_encontrada (un mismo renglón se divide en varios porque la obra tenía más información)
##Como preliminar, dejamos los duplicados y luego tomamos la primera con el mismo ID
##Para el mapa web sirve. Para la base de obras no tanto. Pero eso está pendiente.
kmls_sv=kmls_sv |>
dplyr::group_by(Name) |>
dplyr::summarise(geometry=st_combine(geometry))
View(kmls_sv)
#localidad_encontrada (un mismo renglón se divide en varios porque la obra tenía más información)
##Como preliminar, dejamos los duplicados y luego tomamos la primera con el mismo ID
##Para el mapa web sirve. Para la base de obras no tanto. Pero eso está pendiente.
kmls_sv=kmls_sv |>
dplyr::group_by(Name) |>
dplyr::summarise(geometry=st_combine(geometry)) |>
st_zm()
View(kmls_sv)
View(kmls_sv)
###
kmls_sv=merge(kmls_sv,docs_sheets_sv,by.x='Name',by.y='ID_OBRA')
View(kmls_sv)
View(kmls_sv)
kmls_para_merge_sv=kmls_sv
View(kmls_para_merge_sv)
excel_separados_por_mun_para_merge=excel_separados_por_mun |>
dplyr::mutate(ID=paste0(No.,"_",Municipio))
###Primero identificamos los que no se pudieron unir.
#Al menos habrá dos donde eran de cobertura estatal y se encontró el municipio
kmls_para_merge$Name[which(kmls_para_merge$Name |> lapply(\(x){!x%in%excel_separados_por_mun_para_merge$ID}) |> unlist())]
###Primero identificamos los que no se pudieron unir.
#Al menos habrá dos donde eran de cobertura estatal y se encontró el municipio
kmls_para_merge_sv$Name[which(kmls_para_merge_sv$Name |> lapply(\(x){!x%in%excel_separados_por_mun_para_merge$ID}) |> unlist())]
simulacro_union_sv=merge(kmls_para_merge_sv,
excel_separados_por_mun_para_merge,
by.x='Name',by.y='ID')
View(simulacro_union_sv)
View(simulacro_union_sv)
simulacro_union_sv=simulacro_union_sv |>
dplyr::group_by(Name) |>
dplyr::slice_head(n=1)
simulacro_union$geometry |> plot()
View(simulacro_union)
simulacro_union_sv=merge(kmls_para_merge_sv,
excel_separados_por_mun_para_merge,
by.x='Name',by.y='ID')
View(simulacro_union_sv)
simulacro_union_sv=simulacro_union_sv |> st_as_sf()
View(simulacro_union_sv)
simulacro_union_sv=merge(kmls_para_merge_sv,
excel_separados_por_mun_para_merge,
by.x='Name',by.y='ID')
View(kmls_para_merge_sv)
View(kmls_para_merge_sv)
simulacro_union_sv=kmls_para_merge_sv
simulacro_union_sv=simulacro_union_sv |> st_as_sf() |>
dplyr::group_by(Name) |>
dplyr::slice_head(n=1)
View(simulacro_union_sv)
simulacro_union$geometry |> plot()
simulacro_union$geometry |> lapply(st_geometry_type)
simulacro_union$geometry |> lapply(st_geometry_type) |> unlist() |> unique()
View(simulacro_union_sv)
simulacro_union_sv=simulacro_union_sv |> st_as_sf() |>
dplyr::group_by(Name) |>
dplyr::slice_head(n=1) |> st_zm()
simulacro_union_sv=kmls_para_merge_sv
simulacro_union_sv=simulacro_union_sv |> st_as_sf() |>
dplyr::group_by(Name) |>
dplyr::slice_head(n=1) |> st_zm()
View(simulacro_union_sv)
simulacro_union$geometry |> lapply(st_geometry_type) |> unlist() |> unique()
View(simulacro_union)
simulacro_union_sv$geometry |> lapply(st_geometry_type) |> unlist() |> unique()
por_obra_y_loc_c_g$ID_OBRA |> unique() |> length()
simulacro_union_sv |> colnames()
simulacro_union_sv |> colnames() |> sort()
##
por_obra_y_loc_c_g|> colnames() |> sort()
rbind(por_obra_y_loc_c_g |> dplyr::select(ID_OBRA:geometry) ,
simulacro_union_sv |> dplyr::select(Name:Municipio_original,geometry)|>
dplyr::rename(ID_OBRA=Name))
rbind(por_obra_y_loc_c_g |> dplyr::select(ID_OBRA,Municipio_original,geometry) ,
simulacro_union_sv |> dplyr::select(Name:Municipio_original,geometry)|>
dplyr::rename(ID_OBRA=Name))
append=rbind(por_obra_y_loc_c_g |> dplyr::select(ID_OBRA,Municipio_original,geometry) ,
simulacro_union_sv |> dplyr::select(Name:Municipio_original,geometry)|>
dplyr::rename(ID_OBRA=Name))
appended=rbind(por_obra_y_loc_c_g |> dplyr::select(ID_OBRA,Municipio_original,geometry) ,
simulacro_union_sv |> dplyr::select(Name:Municipio_original,geometry)|>
dplyr::rename(ID_OBRA=Name))
View(appended)
View(por_obra_y_loc_c_g)
View(simulacro_union_sv)
por_obra_y_loc_c_g |> dplyr::select(ID_OBRA,Municipio_original,geometry) |> colnames()
appended=rbind(por_obra_y_loc_c_g |> dplyr::select(ID_OBRA:Municipio_original,geometry) ,
simulacro_union_sv |> dplyr::select(Name:Municipio_original,geometry)|>
dplyr::rename(ID_OBRA=Name))
appended=plyr::rbind.fill(por_obra_y_loc_c_g |> dplyr::select(ID_OBRA:Municipio_original,geometry) ,
simulacro_union_sv |> dplyr::select(Name:Municipio_original,,geometry)|>
dplyr::rename(ID_OBRA=Name))
View(appended)
appended=appended |>
dplyr::select(ID_OBRA:Municipio_original)
